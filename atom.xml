<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Linhost.info</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://linhost.info/"/>
  <updated>2020-08-08T01:45:44.384Z</updated>
  <id>http://linhost.info/</id>
  
  <author>
    <name>Lven</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://linhost.info/2020/08/07/hello-world/"/>
    <id>http://linhost.info/2020/08/07/hello-world/</id>
    <published>2020-08-08T01:45:44.383Z</published>
    <updated>2020-08-08T01:45:44.384Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Tar and compress a directory in Linux</title>
    <link href="http://linhost.info/2017/02/28/tar-and-compress-a-directory-in-linux/"/>
    <id>http://linhost.info/2017/02/28/tar-and-compress-a-directory-in-linux/</id>
    <published>2017-03-01T00:47:43.000Z</published>
    <updated>2020-08-09T09:07:54.024Z</updated>
    
    <content type="html"><![CDATA[<p>The following will tar and compress the contents of a directory</p><p>tar czf file.tar.gz input_directory</p><p>The same can be extracted with tar but indicating compression .</p><p>tar xzvf file.tar.gz output_directory</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;The following will tar and compress the contents of a directory&lt;/p&gt;
&lt;p&gt;tar czf file.tar.gz input_directory&lt;/p&gt;
&lt;p&gt;The same can be extract
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Server Migration Bear With Me</title>
    <link href="http://linhost.info/2017/02/20/server-migration-bear-with-me/"/>
    <id>http://linhost.info/2017/02/20/server-migration-bear-with-me/</id>
    <published>2017-02-21T01:35:49.000Z</published>
    <updated>2020-08-09T09:07:54.022Z</updated>
    
    <content type="html"><![CDATA[<p>I’m in the process of migrating servers please bear with me incase somethings do not work as they should.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I’m in the process of migrating servers please bear with me incase somethings do not work as they should.&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Mount a USB Drive in Raspberry Pi With Read/Write Access- Linux</title>
    <link href="http://linhost.info/2017/01/23/mount-a-usb-drive-in-raspberry-pi-with-readwrite-access-linux/"/>
    <id>http://linhost.info/2017/01/23/mount-a-usb-drive-in-raspberry-pi-with-readwrite-access-linux/</id>
    <published>2017-01-24T01:03:44.000Z</published>
    <updated>2020-08-09T09:07:54.018Z</updated>
    
    <content type="html"><![CDATA[<p>Because I tend to forget this is a simple way of mount a USB drive in Raspbian. Remember we are working with FAT/FAT32 formatted drive and permissions are handled differently in the case of a FAT drive permissions are not supported . First we need to find out how the system views our drive and partitions .</p><p>pi@raspberrypi:/mnt/usb $ ls /dev/sd*<br>/dev/sda  /dev/sda1</p><p>Create a mount point for the drive .</p><p>$ sudo mkdir /mnt/usb</p><p>Now that we know our drive is /dev/sda and the partition is /dev/sda1 we can proceed to mount . By making use of umask=000 we allow read, write and execute for all .</p><p>$ sudo mount /dev/sda1 /mnt/usb -o umask=000</p><p>Once mounted you can view the newly mounted drive and start writing to it .</p><p>pi@raspberrypi:/mnt/usb $ df -h</p><p>Filesystem      Size  Used Avail Use% Mounted on<br>/dev/root        15G   11G  3.7G  75% /<br>devtmpfs        459M     0  459M   0% /dev<br>tmpfs           463M  4.0K  463M   1% /dev/shm<br>tmpfs           463M  7.1M  456M   2% /run<br>tmpfs           5.0M  4.0K  5.0M   1% /run/lock<br>tmpfs           463M     0  463M   0% /sys/fs/cgroup<br>/dev/mmcblk0p1   63M   21M   43M  34% /boot<br>/dev/sda1        30G   16K   30G   1% /mnt/usb</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Because I tend to forget this is a simple way of mount a USB drive in Raspbian. Remember we are working with FAT/FAT32 formatted drive an
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux - Zero Out All Available Free Space</title>
    <link href="http://linhost.info/2017/01/23/linux-zero-out-all-available-free-space/"/>
    <id>http://linhost.info/2017/01/23/linux-zero-out-all-available-free-space/</id>
    <published>2017-01-24T00:47:40.000Z</published>
    <updated>2020-08-09T09:07:54.020Z</updated>
    
    <content type="html"><![CDATA[<p>Because I tend to forget. This is a simple way to zero out all free space on a drive all that is needed is PV and administrative privileges . If PV is not installed on the system you can install it via your package manager .</p><p>$ sudo apt-get install pv</p><p>We will be directing all /dev/zero output to a file in the target drive we wish to zero-out . Once all free space is occupied in the target drive the operation will stop by itself .</p><p>$ sudo pv /dev/zero &gt; /mnt/usb/delete.me</p><p>Sample output .</p><p>pi@raspberrypi:~ $ sudo pv /dev/zero &gt; /mnt/usb/delete.me<br> 202MiB 0:00:06 [6.56MiB/s] [      &lt;=&gt;</p><p>Remove the resulting file .</p><p>$ rm delete.me</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Because I tend to forget. This is a simple way to zero out all free space on a drive all that is needed is PV and administrative privileg
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Join multiple MP3s into a single file with Mp3Wrap</title>
    <link href="http://linhost.info/2016/12/29/join-multiple-mp3s-into-a-single-file-with-mp3wrap/"/>
    <id>http://linhost.info/2016/12/29/join-multiple-mp3s-into-a-single-file-with-mp3wrap/</id>
    <published>2016-12-29T21:45:55.000Z</published>
    <updated>2020-08-09T09:07:54.017Z</updated>
    
    <content type="html"><![CDATA[<p>Mp3Wrap is a simple tool all we need to do is indicate a filename for the resulting file followed by all the MP3 files to be joined by Mp3Wrap. Mp3Wrap can be easily installed from the Ubuntu repository using apt-get.</p><p>$ sudo apt-get install mp3wrap</p><p>Explanation of command to be executed:</p><ul><li><strong>output.mp3</strong> - this is the name of the resulting file create by Mp3Wrap</li><li><strong>1.mp3, 2.mp3</strong> - and so on… this is where you would list all files to be joined by Mp3Wrap</li></ul><p>The resulting file will end with <strong>*_MP3WRAP.mp3</strong>.</p><p> $ mp3wrap output.mp3 1.mp3 2.mp3</p><p>Mp3Wrap Version 0.5 (2003/Jan/16). See README and COPYING for more!<br>Written and copyrights by Matteo Trotta - THIS SOFTWARE COMES WITH ABSOLUTELY NO WARRANTY! USE AT YOUR OWN RISK!</p><p>  50 %    –&gt; Wrapping 1.mp3 … OK<br>  100 %    –&gt; Wrapping 2.mp3 … OK</p><p>  Calculating CRC, please wait… OK</p><p>output_MP3WRAP.mp3 has been created successfully!<br>Use mp3splt to dewrap file; download at <a href="http://mp3splt.sourceforge.net/">http://mp3splt.sourceforge.net</a>!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Mp3Wrap is a simple tool all we need to do is indicate a filename for the resulting file followed by all the MP3 files to be joined by Mp
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Dump1090-mutability enabling &quot;Distance from Site&quot;</title>
    <link href="http://linhost.info/2016/12/29/dump1090-mutability-enabling-distance-from-site/"/>
    <id>http://linhost.info/2016/12/29/dump1090-mutability-enabling-distance-from-site/</id>
    <published>2016-12-29T19:48:50.000Z</published>
    <updated>2020-08-09T09:07:54.016Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://cdn.linhost.info/static/12-29-16-lat-on-na.png"> By default Dump1090 interface will not display the distance between an aircraft and the site this can be easily corrected by editing a single file and providing the latitude and longitude where the receiver(yours) is located. The file in question can be located for Dump1090-mutability at</p><p>/etc/default/dump1090-mutability</p><p>Before we can start editing the configuration file first we need to obtain the latitude and longitude of the site as I assume you don’t know this information I suggest using Google Maps to obtain it. Visit <a href="http://google.com/maps">google.com/maps</a> search for the address where the receiver is located. Once you find the site(address) <strong>right click</strong> on the location to display the menu and select <strong>What’s here?</strong> <img src="http://cdn.linhost.info/static/12-29-16-site-address.png"> Near the bottom of the window you should see the latitude and longitude of the site displayed. Copy this information exactly the way it appears. <img src="http://cdn.linhost.info/static/12-29-16-site-lat-on.png"> My installation runs on a Raspberry Pi 2, log in to the system where Dump1090 runs and with enough permission look for and edit the following parameters <strong>LAT= latitude, LON=longitude</strong> this are the parameters well be adding the latitude and longitude information to.</p><p>sudo nano /etc/default/dump1090-mutability</p><p># If set, supplies a reference location for local position decoding.<br>LAT=”35.084005”<br>LON=”-106.643967”</p><p>We are almost done now just reboot dump1090.</p><p>sudo service dump1090-mutability restart</p><p>Dump1090-mutability should start reporting the distance. <img src="http://cdn.linhost.info/static/12-29-16-lat-on.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://cdn.linhost.info/static/12-29-16-lat-on-na.png&quot;&gt; By default Dump1090 interface will not display the distance between an 
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Mikrotik RouterOS - Change SSH Default Port Number</title>
    <link href="http://linhost.info/2016/04/24/mikrotik-routeros-change-ssh-default-port-number/"/>
    <id>http://linhost.info/2016/04/24/mikrotik-routeros-change-ssh-default-port-number/</id>
    <published>2016-04-24T14:01:07.000Z</published>
    <updated>2020-08-09T09:07:54.015Z</updated>
    
    <content type="html"><![CDATA[<p>From the RouterOS command line move to <strong>/ip service</strong> and issue the <strong>print</strong> command this will display port numbers for various services and which of those services are currently enabled. I will also cover how to disable the services if you wish, the output below is from a recent RouterOS install.</p><p>[admin@MikroTik] /ip service&gt; print</p><p>Flags: X - disabled, I - invalid</p><h1 id="NAME-PORT-ADDRESS-CERTIFICATE"><a href="#NAME-PORT-ADDRESS-CERTIFICATE" class="headerlink" title="NAME                                PORT ADDRESS                                                                  CERTIFICATE"></a>NAME                                PORT ADDRESS                                                                  CERTIFICATE</h1><p> 0   telnet                                23<br> 1   ftp                                   21<br> 2   www                                   80<br> 3   ssh                                 22<br> 4 XI www-ssl                              443                                                                          none<br> 5   api                                 8728<br> 6   winbox                              8291<br> 7   api-ssl                             8729</p><p>From <strong>/ip service</strong> set the new SSH port number. Pick a number you like or you can use the following list <a href="https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers">https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers</a>.</p><p>[admin@MikroTik] /ip service&gt; set ssh port=2987</p><p>The change takes effectively immediately.</p><h3 id="Disable-a-Service"><a href="#Disable-a-Service" class="headerlink" title="Disable a Service"></a>Disable a Service</h3><p>Disabling a service is equally easy just type <strong>disable</strong> followed by the service name. It’s always a good idea to disable unused services. Below I’ve disable three different services.</p><p>[admin@MikroTik] /ip service&gt; disable telnet</p><p>[admin@MikroTik] /ip service&gt; disable ftp</p><p>[admin@MikroTik] /ip service&gt; disable winbox</p><p>Issue the print command to verify the port change, note that certain services have a <strong>X</strong> in front of them indicating the service has been disabled.</p><p>[admin@MikroTik] /ip service&gt; print</p><p>Flags: X - disabled, I - invalid</p><h1 id="NAME-PORT-ADDRESS-CERTIFICATE-1"><a href="#NAME-PORT-ADDRESS-CERTIFICATE-1" class="headerlink" title="NAME                  PORT ADDRESS                                                     CERTIFICATE"></a>NAME                  PORT ADDRESS                                                     CERTIFICATE</h1><p> 0 XI telnet                  23<br> 1 XI ftp                     21<br> 2   www                     80<br> 3   ssh                   2484<br> 4 XI www-ssl                443                                                             none<br> 5   api                   8728<br> 6 XI winbox                8291<br> 7   api-ssl               8729                                                             none</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;From the RouterOS command line move to &lt;strong&gt;/ip service&lt;/strong&gt; and issue the &lt;strong&gt;print&lt;/strong&gt; command this will display port n
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Raspberry Pi - Dump1090-Mutability and PiAware</title>
    <link href="http://linhost.info/2016/04/10/raspberry-pi-dump1090-mutability-and-piaware/"/>
    <id>http://linhost.info/2016/04/10/raspberry-pi-dump1090-mutability-and-piaware/</id>
    <published>2016-04-11T02:31:14.000Z</published>
    <updated>2020-08-09T09:07:54.014Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve been running a <a href="http://flightaware.com/adsb/piaware/install">PiAware</a> installation for the last couple of months but after a reinstall I notice some problems specifically with dump1090 provided by the <a href="http://flightaware.com/adsb/piaware/install">PiAware installation instructions</a>. After searching on various forums I decided to give <a href="https://github.com/mutability/dump1090">dump1090-mutability</a> a fork of dump1090 a try and can report great success which is why I decided to list the steps needed to configure dump1090-mutability in a Raspbian install. <strong>Current set-up:</strong> Raspbian Jessie Lite on a Raspberry Pi 2 + RTL2832U.</p><h3 id="Prepare-Raspbian"><a href="#Prepare-Raspbian" class="headerlink" title="Prepare Raspbian"></a>Prepare Raspbian</h3><p>sudo apt-get update</p><p>sudo apt-get upgrade</p><h3 id="Dump1090-Mutability-Install"><a href="#Dump1090-Mutability-Install" class="headerlink" title="Dump1090 Mutability Install"></a>Dump1090 Mutability Install</h3><p>Download the necessary .deb from GitHub.</p><p>wget <a href="https://github.com/mutability/mutability-repo/releases/download/v0.1.0/mutability-repo/_0.1.0/_armhf.deb">https://github.com/mutability/mutability-repo/releases/download/v0.1.0/mutability-repo\_0.1.0\_armhf.deb</a></p><p>Install the downloaded .deb. Notice the version number.</p><p>sudo dpkg -i mutability-repo_0.1.0_armhf.deb</p><p>Once again update the installation.</p><p>sudo apt-get update</p><p>The GPG key provided with mutability-repo_0.1.0_armhf.deb expired which will result in an error every time you run apt-get we can fix the source for the error.</p><p>W: GPG error: <a href="http://repo.mutability.co.uk/">http://repo.mutability.co.uk</a> wheezy InRelease: The following signatures were invalid: KEYEXPIRED 1451307476 KEYEXPIRED 1451307476 KEYEXPIRED 1451307476</p><p>Now re-install <strong>mutability-repo</strong> this will pull the latest version with a valid signature.</p><p>sudo apt-get install mutability-repo</p><p>Install <strong>dump1090-mutability</strong> the version from the repository at the time of this writing was <strong>dump1090-mutability v1.14</strong>.</p><p>sudo apt-get install dump1090-mutability</p><p>Install the web server.</p><p>sudo apt-get install lighttpd</p><p>Enable module.</p><p>sudo lighty-enable-mod dump1090</p><p>Reload web server for changes to take effect.</p><p>sudo service lighttpd force-reload</p><p>Or you can reboot the entire installation which is why I recommend.</p><p>sudo reboot</p><p>On a web browser and enter the IP address for your Raspberry Pi followed by <strong>/dump1090</strong>.</p><p><a href="http://your/_ip/_address/dump1090/">http://your\_ip\_address/dump1090/</a></p><p><a href="https://linhost.info/wp-content/uploads/2016/04/dump1090.jpg"><img src="https://linhost.info/wp-content/uploads/2016/04/dump1090.jpg" alt="dump1090"></a></p><h3 id="PiAware-Install"><a href="#PiAware-Install" class="headerlink" title="PiAware Install"></a>PiAware Install</h3><p>For the latest version of PiAware check the <a href="http://flightaware.com/adsb/piaware/install">FlightAware page</a>. At the time of this writing the current version was <strong>piaware_2.1-5</strong>.</p><p>wget <a href="http://flightaware.com/adsb/piaware/files/piaware/_2.1-5/_armhf.deb">http://flightaware.com/adsb/piaware/files/piaware\_2.1-5\_armhf.deb</a></p><p>Install the downloaded package.</p><p>sudo dpkg -i piaware_2.1-5_armhf.deb</p><p>You will receive multiple errors regarding missing dependencies let apt-get install the missing dependencies.</p><p>sudo apt-get install -fy</p><p>Auto-update the PiAware Software.</p><p>sudo piaware-config -autoUpdate 1 -manualUpdate 1</p><h3 id="Connect-To-FlightAware"><a href="#Connect-To-FlightAware" class="headerlink" title="Connect To FlightAware"></a>Connect To FlightAware</h3><p>Connect the PiAware install to flightAware by providing user credentials.</p><p>sudo piaware-config -user your_username -password</p><p>Restart PiAware.</p><p>sudo /etc/init.d/piaware restart</p><p>View the status of the install.</p><p>lventura@raspberrypi:~ $ sudo piaware-status</p><p>dump1090 is not running.<br>faup1090 is running.<br>piaware is running.<br>dump1090-mutabi is listening for connections on port 30005.<br>faup1090 is connected to port 30005.<br>piaware is connected to FlightAware.<br>dump1090-mutabi is producing data on port 30005.</p><p>The new install should start feeding data back to FlightAware.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I’ve been running a &lt;a href=&quot;http://flightaware.com/adsb/piaware/install&quot;&gt;PiAware&lt;/a&gt; installation for the last couple of months but afte
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Raspbian - Dump1090 Not Running</title>
    <link href="http://linhost.info/2016/04/03/raspbian-dump1090-not-running/"/>
    <id>http://linhost.info/2016/04/03/raspbian-dump1090-not-running/</id>
    <published>2016-04-04T03:39:33.000Z</published>
    <updated>2020-08-09T09:07:54.012Z</updated>
    
    <content type="html"><![CDATA[<p>I came across a problem that only seems happen on PiAwawre self installs where Dump1090 will not run.</p><p>pi@raspberrypi:~ $ sudo piaware-status</p><p>dump1090 is not running.<br>faup1090 is not running.<br>piaware is running.<br>no program appears to be listening for connections on port 30005.<br>faup1090 is NOT connected to port 30005.<br>piaware is connected to FlightAware.<br>got ‘couldn’t open socket: connection refused’<br>maybe dump1090 is NOT producing data on port 30005.</p><p>Troubleshooting steps included the following: I tried adding the password again maybe I made a mistake but it didn’t fix the problem.</p><p>sudo piaware-config -user username -password</p><p>I know the my RTL is recognized by Raspbian.</p><p>lsusb</p><p>Bus 001 Device 011: ID 0cf3:9271 Atheros Communications, Inc. AR9271 802.11n<br>Bus 001 Device 010: ID 0bda:2832 Realtek Semiconductor Corp. RTL2832U DVB-T<br>Bus 001 Device 009: ID 05dc:a762 Lexar Media, Inc.<br>Bus 001 Device 013: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)<br>Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp. SMSC9512/9514 Fast Ethernet Adapter<br>Bus 001 Device 002: ID 0424:9514 Standard Microsystems Corp.<br>Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</p><p>Tried to Restart PiAware.</p><p>sudo /etc/init.d/piaware restart</p><p>And looked for any helpful output.</p><p>cat /tmp/piaware.out</p><p>On a forum there was a suggestion about blacklisting a module.</p><p>sudo nano /etc/modprobe.d/rtlsdr.conf</p><p>Add the line below to <strong>.conf</strong>.</p><p>blacklist dvb_usb_rtl28xxu</p><p>After making the changes reboot abd run the <strong>piaware-status</strong> command hopefully your output will change.</p><p>pi@raspberrypi:~ $ sudo piaware-status</p><p>dump1090 is running.<br>faup1090 is running.<br>piaware is running.<br>dump1090 is listening for connections on port 30005.<br>faup1090 is connected to port 30005.<br>piaware is connected to FlightAware.<br>dump1090 is producing data on port 30005.</p><h3 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h3><p><a href="https://opendesignengine.net/news/53">https://opendesignengine.net/news/53</a> <a href="http://discussions.flightaware.com/ads-b-flight-tracking-f21/help-no-ads-b-data-program-is-serving-port-30005-t35812.html">http://discussions.flightaware.com/ads-b-flight-tracking-f21/help-no-ads-b-data-program-is-serving-port-30005-t35812.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I came across a problem that only seems happen on PiAwawre self installs where Dump1090 will not run.&lt;/p&gt;
&lt;p&gt;pi@raspberrypi:~ $ sudo piaw
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Mikrotik - RouterOS Disable FastTrack To Limit Bandwidth</title>
    <link href="http://linhost.info/2016/04/03/mikrotik-routeros-disable-fasttrack-to-limit-bandwidth/"/>
    <id>http://linhost.info/2016/04/03/mikrotik-routeros-disable-fasttrack-to-limit-bandwidth/</id>
    <published>2016-04-03T07:02:56.000Z</published>
    <updated>2020-08-09T09:07:54.011Z</updated>
    
    <content type="html"><![CDATA[<p>You can read more about FastTrack from the <a href="http://wiki.mikrotik.com/wiki/Manual:Wiki/Fasttrack">Mikrotik Wiki on FastTrack</a>. The function has it’s advantages by increasing throughout and reducing CPU load. However I wanted to limit bandwidth to clients and FastTrack had to be disabled in order to limit. From the RouterOS command line move to <strong>/ip firewall filter</strong> and issue the <strong>print</strong> command to view all available rules. Rule <strong>4</strong> has what we are looking for which is <strong>fasttrack</strong> depending on previous changes made to your rules the placement maybe different resulting in a completely different number.</p><p>[admin@HM-R] /ip firewall filter&gt; print</p><p>Flags: X - disabled, I - invalid, D - dynamic<br> 0  D ;;; special dummy rule to show fasttrack counters<br>      chain=forward</p><p> 1    ;;; default configuration<br>      chain=input action=accept protocol=icmp log=no log-prefix=””</p><p> 2    ;;; default configuration<br>      chain=input action=accept connection-state=established,related log=no log-prefix=””</p><p> 3    ;;; default configuration<br>      chain=input action=drop in-interface=ether1-gateway log=no log-prefix=””</p><p> 4    ;;; default configuration<br>      chain=forward action=fasttrack-connection connection-state=established,related log=no log-prefix=””</p><p> 5    ;;; default configuration<br>      chain=forward action=accept connection-state=established,related log=no log-prefix=””</p><p> 6    ;;; default configuration<br>      chain=forward action=drop connection-state=invalid log=no log-prefix=””</p><p> 7    ;;; default configuration<br>      chain=forward action=drop connection-state=new connection-nat-state=!dstnat in-interface=ether1-gateway log=no<br>      log-prefix=””</p><p>Now issue the <strong>disable</strong> command along with the rule number you wish to disable. Alternatively the rule can be removed completely with the command <strong>remove</strong> but I rather preserve it in case I needed at a later time.</p><p>[admin@HM-R] /ip firewall filter&gt; disable numbers=4</p><p>Rule 4 is now disabled as indicated by the capital XI in front of the rule.</p><p>[admin@HM-R] /ip firewall filter&gt; print</p><p>Flags: X - disabled, I - invalid, D - dynamic<br> 0  D ;;; special dummy rule to show fasttrack counters<br>      chain=forward</p><p> 1    ;;; default configuration<br>      chain=input action=accept protocol=icmp log=no log-prefix=””</p><p> 2    ;;; default configuration<br>      chain=input action=accept connection-state=established,related log=no log-prefix=””</p><p> 3    ;;; default configuration<br>      chain=input action=drop in-interface=ether1-gateway log=no log-prefix=””</p><p> 4 XI  ;;; default configuration<br>      chain=forward action=fasttrack-connection connection-state=established,related log=no log-prefix=””</p><p> 5    ;;; default configuration<br>      chain=forward action=accept connection-state=established,related log=no log-prefix=””</p><p> 6    ;;; default configuration<br>      chain=forward action=drop connection-state=invalid log=no log-prefix=””</p><p> 7    ;;; default configuration<br>      chain=forward action=drop connection-state=new connection-nat-state=!dstnat in-interface=ether1-gateway log=no<br>      log-prefix=””</p><p>With Fasttrack disabled I can add my 20/20 Megabit symmetrical limit.</p><p>[admin@HM-R] /queue simple&gt; add max-limit=20M/20M name=client-arq target=192.168.200.2/32</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;You can read more about FastTrack from the &lt;a href=&quot;http://wiki.mikrotik.com/wiki/Manual:Wiki/Fasttrack&quot;&gt;Mikrotik Wiki on FastTrack&lt;/a&gt;. 
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Mikrotik - RouterOS SSH Public Key Authentication</title>
    <link href="http://linhost.info/2016/04/02/mikrotik-routeros-ssh-public-key-authentication/"/>
    <id>http://linhost.info/2016/04/02/mikrotik-routeros-ssh-public-key-authentication/</id>
    <published>2016-04-03T05:54:24.000Z</published>
    <updated>2020-08-09T09:07:54.010Z</updated>
    
    <content type="html"><![CDATA[<p>If you intent to make use of a RSA key make sure you are running RouterOS 6.31 version or above, otherwise you may receive an error like this one <strong>unable to load key file (incorrect passphrase?) !</strong>. If the installation needs to be update then refer to this post on <a href="https://linhost.info/2016/03/upgrade-routeros-from-the-command-line/">How to Upgrade RouterOS from the Command Line</a>. NOte: you need access to a Linux system to generate the private and public key pair.</p><h3 id="Key-Generation"><a href="#Key-Generation" class="headerlink" title="Key Generation"></a>Key Generation</h3><p>Use the <strong>ssh-keygen</strong> command to generate an RSA key pair. This step is almost automated for you just wait.</p><p>lventura@SF-DEV:~$ ssh-keygen -t rsa</p><p>You can view the key pair in their respective directory. Remember: <strong>id_rsa.pub</strong> is meant to be public and will be the file we upload to the remote system.</p><p>lventura@HM-R:~/scripts $ ls ~/.ssh<br>authorized_keys  id_rsa  id_rsa.pub  known_hosts</p><p>The key pair will reside in the <strong>~/.ssh</strong> found in the users home directory. Use <strong>SCP</strong> to copy the public key pair from the Linux system over to the Mikrotik RouterOS system just change the IP address to that of your router.</p><p>lventura@SF-DEV:~$ scp ~/.ssh/id_rsa.pub <a href="mailto:&#x61;&#100;&#x6d;&#105;&#110;&#x40;&#49;&#x39;&#x32;&#46;&#x31;&#54;&#56;&#46;&#x31;&#48;&#x30;&#46;&#49;">&#x61;&#100;&#x6d;&#105;&#110;&#x40;&#49;&#x39;&#x32;&#46;&#x31;&#54;&#56;&#46;&#x31;&#48;&#x30;&#46;&#49;</a>:id_rsa.pub</p><p>Now log-in to RouterOS and import <strong>id_rsa.pub</strong> key we just uploaded. I’m importing a key for the user <strong>admin</strong> you can change this to the of any other user.</p><h3 id="RouterOS-Key-Import"><a href="#RouterOS-Key-Import" class="headerlink" title="RouterOS Key Import"></a>RouterOS Key Import</h3><p>[admin@HM-GW] &gt; /user ssh-keys import public-key-file=id_rsa.pub user=admin</p><p>Let’s view the user new SSH key.</p><p>[admin@HM-GW] &gt; /user ssh-keys print<br>Flags: R - RSA, D - DSA</p><h1 id="USER-BITS-KEY-OWNER"><a href="#USER-BITS-KEY-OWNER" class="headerlink" title="USER                       BITS KEY-OWNER"></a>USER                       BITS KEY-OWNER</h1><p> 0 R admin                      2048</p><h3 id="New-Key-Test"><a href="#New-Key-Test" class="headerlink" title="New Key Test"></a>New Key Test</h3><p>Using an SSH client with the new private SSH key attempt to log-in to RouterOS, if successful you shouldn’t be prompted for a password. <a href="https://linhost.info/wp-content/uploads/2016/04/ssh-login.png"><img src="https://linhost.info/wp-content/uploads/2016/04/ssh-login.png" alt="ssh-login"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;If you intent to make use of a RSA key make sure you are running RouterOS 6.31 version or above, otherwise you may receive an error like 
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Mikrotik - Upgrade RouterOS from the Command Line</title>
    <link href="http://linhost.info/2016/03/27/upgrade-routeros-from-the-command-line/"/>
    <id>http://linhost.info/2016/03/27/upgrade-routeros-from-the-command-line/</id>
    <published>2016-03-27T21:52:33.000Z</published>
    <updated>2020-08-09T09:07:54.008Z</updated>
    
    <content type="html"><![CDATA[<p>My Mikrotik router was running version 6.30 which I needed to update to version 6.31 in order to support RSA keys. I found updating the router from the command line to be quite easy an straight forward. it only requires a few commands and requires little user input. I know of two ways to view the current running firmware. My hAP at the time it arrived was running RouterOS version 6.30.4.</p><p>[admin@HM-GW] /system resource&gt; print</p><pre><code>               uptime: 14h43m39s              version: 6.30.4           build-time: Aug/25/2015 12:59:46          free-memory: 41.0MiB         total-memory: 64.0MiB                  cpu: MIPS 24Kc V7.4            cpu-count: 1        cpu-frequency: 650MHz             cpu-load: 3%       free-hdd-space: 4.8MiB      total-hdd-space: 16.0MiB</code></pre><p>  write-sect-since-reboot: 691<br>         write-sect-total: 5566<br>               bad-blocks: 0%<br>        architecture-name: mipsbe<br>               board-name: hAP ac lite<br>                 platform: MikroTik</p><p>Making use of the <strong>/system package update check-for-updates</strong> we can also view the running version and latest available version of RouterOS for download.</p><p>[admin@HM-GW] /system package update&gt; check-for-updates</p><p>   current-version: 6.30.4<br>   latest-version: 6.34.3</p><p>Now that we know there is an available update we tell the router to download and install. The router will reboot.</p><p>[admin@HM-GW] /system package update&gt; download</p><pre><code>      channel: current</code></pre><p>  current-version: 6.34.3<br>   latest-version: 6.34.4<br>           status: Downloaded, please reboot router to upgrade it</p><p>Reboot for the changes to take effect.</p><p>[admin@HM-GW] /system package update&gt; /system reboot</p><p>You will be asked for confirmation prior to rebooting.</p><p>Reboot, yes? [y/N]:<br>y<br>system will reboot shortly</p><p>Installing the new firmware took less than a minute. Let’s check again and see what version of RouterOS is currently running.</p><p>[admin@HM-GW] /system package update&gt; check-for-updates</p><pre><code>      channel: current</code></pre><p>  current-version: 6.34.3<br>   latest-version: 6.34.3<br>           status: System is already up to date</p><p>We are done and the system is now updated to the latest available firmware. Fairly easy and painless to update RouterOS. <em>4/8/2016 - Corrected grammatical error. Thank you for pointing it out.</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;My Mikrotik router was running version 6.30 which I needed to update to version 6.31 in order to support RSA keys. I found updating the r
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Xiaomi USB Type C Adapter - Convert Micro USB to Type-C</title>
    <link href="http://linhost.info/2016/02/29/xiaomi-usb-type-c-adapter-convert-micro-usb-to-type-c/"/>
    <id>http://linhost.info/2016/02/29/xiaomi-usb-type-c-adapter-convert-micro-usb-to-type-c/</id>
    <published>2016-03-01T03:13:14.000Z</published>
    <updated>2020-08-09T09:07:54.007Z</updated>
    
    <content type="html"><![CDATA[<p>Just a heads up if you are looking for a certified Micro USB to Type C adapter then I would recommend looking at the Xiaomi USB Type C Adapter they are a great way of converting the Micro USB cables you already have to Type C. The adapter works just fine with the Nexus 6P I have yet to see any problem after almost two months of use. <a href="http://www.geekbuying.com/item/Original-Xiaomi-Mi-USB-Type-C-To-Micro-USB-Adapter-Xiaomi-USB-Turn-Type-C-OTG-Adapter-Mobile-Phone-Cables-355450.html">I bought mine from Geekbuying</a> for under $2.oo USD. <a href="https://linhost.info/wp-content/uploads/2016/03/wp-1456790651766.jpg"><img src="https://linhost.info/wp-content/uploads/2016/03/wp-1456790651766.jpg" alt="wp-1456790651766.jpg"></a> <a href="https://linhost.info/wp-content/uploads/2016/03/wp-1456790705443.jpg"><img src="https://linhost.info/wp-content/uploads/2016/03/wp-1456790705443.jpg" alt="wp-1456790705443.jpg"></a> <a href="https://linhost.info/wp-content/uploads/2016/03/wp-1456790715172.jpg"><img src="https://linhost.info/wp-content/uploads/2016/03/wp-1456790715172.jpg" alt="wp-1456790715172.jpg"></a> <a href="https://linhost.info/wp-content/uploads/2016/03/wp-1456790724740.jpg"><img src="https://linhost.info/wp-content/uploads/2016/03/wp-1456790724740.jpg" alt="wp-1456790724740.jpg"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Just a heads up if you are looking for a certified Micro USB to Type C adapter then I would recommend looking at the Xiaomi USB Type C Ad
      
    
    </summary>
    
    
      <category term="Article" scheme="http://linhost.info/categories/Article/"/>
    
    
  </entry>
  
  <entry>
    <title>Adding a Serial Port to the Raspberry Pi Zero</title>
    <link href="http://linhost.info/2016/02/22/test/"/>
    <id>http://linhost.info/2016/02/22/test/</id>
    <published>2016-02-22T21:12:22.000Z</published>
    <updated>2020-08-09T09:07:54.005Z</updated>
    
    <content type="html"><![CDATA[<p>The Raspberry Pi Zero lacks a USB hub and only comes with a single Micro USB port which means you have to be careful with the limited available port. Adding a USB to serial converter is a good way of accessing the Pi Zero without having to plug a keyboard and HDMI connector and it frees the Micro USB port. There are many flavors of USB to RS232 adapters and one of them is <a href="http://www.ebay.com/sch/i.html?_from=R40&_trksid=p2047675.m570.l1312.R1.TR0.TRC2.A0.H0.TRS5&_nkw=ch340&_sacat=0">CH340 eBay</a> which is affordable. Another adapter I like is the CP2102 you can find them on eBay. This are just recommendations in the end it’s your choice as to the one you choose.</p><h3 id="How-I-wire-my-Pi-Zero"><a href="#How-I-wire-my-Pi-Zero" class="headerlink" title="How I wire my Pi Zero"></a>How I wire my Pi Zero</h3><ul><li>The Raspberry Pi can be powered from the same 5V pin coming from the USB to RS232 adapter, I rather have the Zero use a dedicated PSU for stable power.</li></ul><h3 id="Wiring-the-Pi-Zero"><a href="#Wiring-the-Pi-Zero" class="headerlink" title="Wiring the Pi Zero"></a>Wiring the Pi Zero</h3><p><a href="https://pinout.xyz/">https://pinout.xyz/</a> Use the MicroSD slot as a reference point. On the Pi Zero you will make use of the following pins:</p><ul><li><strong>pin 6</strong> is ground(GND)</li><li><strong>pin 8</strong> is transmit(TXD)</li><li><strong>pin 10</strong> is receive(RXD)</li></ul><p><a href="https://linhost.info/wp-content/uploads/2016/02/wp-1456175762341.jpg"><img src="https://linhost.info/wp-content/uploads/2016/02/wp-1456175762341.jpg" alt="image" title="wp-1456175762341"></a></p><h3 id="Wiring-the-USB-to-RS232"><a href="#Wiring-the-USB-to-RS232" class="headerlink" title="Wiring the USB to RS232"></a>Wiring the USB to RS232</h3><p>There might be a slight difference with your USB to RS232 adapter but I am certain it will be the same as below. Make sure to match wiring with those of the Pi Zero. <a href="https://linhost.info/wp-content/uploads/2016/02/wp-1456175769127.jpg"><img src="https://linhost.info/wp-content/uploads/2016/02/wp-1456175769127.jpg" alt="image" title="wp-1456175769127"></a> On the terminal client of your choice use the COM port assigned to the USB adapter and baud rate of <strong>115200</strong>. <img src="https://linhost.info/wp-content/uploads/2016/02/PUTTY-115200.jpg"></p><h3 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h3><p>If you don’t see any output in the console make sure the TXD and RXD pins are in the correct position, otherwise swap them. <img src="https://linhost.info/wp-content/uploads/2016/02/COMMANDLINE-1.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;The Raspberry Pi Zero lacks a USB hub and only comes with a single Micro USB port which means you have to be careful with the limited ava
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
      <category term="raspberry pi" scheme="http://linhost.info/tags/raspberry-pi/"/>
    
  </entry>
  
  <entry>
    <title>I&#39;m still around</title>
    <link href="http://linhost.info/2016/02/15/im-still-around/"/>
    <id>http://linhost.info/2016/02/15/im-still-around/</id>
    <published>2016-02-15T22:28:13.000Z</published>
    <updated>2020-08-09T09:07:54.003Z</updated>
    
    <content type="html"><![CDATA[<p>It’s been a while since I’ve posted to the blog not because I forgot about it but because it has been a busy few months. Expect content soon I promise. <a href="https://linhost.info/wp-content/uploads/2016/02/wp-1455575152952.jpg"><img src="https://linhost.info/wp-content/uploads/2016/02/wp-1455575152952.jpg" alt="image" title="wp-1455575152952"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;It’s been a while since I’ve posted to the blog not because I forgot about it but because it has been a busy few months. Expect content s
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Update the Firmware on a Raspberry Pi</title>
    <link href="http://linhost.info/2015/05/05/update-the-firmware-on-a-raspberry-pi/"/>
    <id>http://linhost.info/2015/05/05/update-the-firmware-on-a-raspberry-pi/</id>
    <published>2015-05-05T07:30:01.000Z</published>
    <updated>2020-08-09T09:07:53.998Z</updated>
    
    <content type="html"><![CDATA[<p>Updating the Raspberry Pi firmware is easy thanks to a nice utility called rpi-update included by default in Raspbian but I’ve also included an extra step for those of us who use other distributions for the Raspberry Pi like Minibian(my favorite), Kali Linux, etc… Understand that rpi-update is automated and once executed it will download and install the firmware without any user input. Upgrading the firmware takes less than a minute, however the install might take longer depending on your Internet connection. The three steps below are included because <strong>rpi-update</strong> is not included by default in other distributions. Update and upgrade the system. First update and upgrade the OS.</p><p>sudo apt-get update</p><p>sudo apt-get upgrade</p><p>Install <strong>rpi-config</strong> from the repository.</p><p>sudo apt-get install rpi-update</p><h3 id="Update-the-Firmware"><a href="#Update-the-Firmware" class="headerlink" title="Update the Firmware"></a>Update the Firmware</h3><p>Rpi-update is automated and once executed it will download and install the firmware without any user input. Upgrading the firmware takes less than a minute, however the install might take longer depending on your Internet connection. Sit back and watch the process.</p><p>root@raspberrypi:~# sudo rpi-update</p><p>*** Raspberry Pi firmware updater by Hexxeh, enhanced by AndrewS and Dom<br>*** Performing self-update<br>% Total % Received % Xferd Average Speed Time Time Time Current<br>Dload Upload Total Spent Left Speed<br>100 9823 100 9823 0 0 1837 0 0:00:05 0:00:05 –:–:– 34346<br>*** Relaunching after update<br>*** Raspberry Pi firmware updater by Hexxeh, enhanced by AndrewS and Dom<br>*** We’re running for the first time<br>*** Backing up files (this will take a few minutes)<br>*** Backing up firmware<br>*** Backing up modules 3.18.7-v7+<br>*** Downloading specific firmware revision (this will take a few minutes)<br>% Total % Received % Xferd Average Speed Time Time Time Current<br>Dload Upload Total Spent Left Speed<br>100 168 0 168 0 0 419 0 –:–:– –:–:– –:–:– 585<br>100 46.1M 100 46.1M 0 0 448k 0 0:01:45 0:01:45 –:–:– 565k<br>*** Updating firmware<br>*** Updating kernel modules<br>*** depmod 3.18.11+<br>*** depmod 3.18.11-v7+<br>*** Updating VideoCore libraries<br>*** Using HardFP libraries<br>*** Updating SDK<br>*** Running ldconfig<br>*** Storing current firmware revision<br>*** Deleting downloaded files<br>*** Syncing changes to disk<br>*** If no errors appeared, your firmware was successfully updated to 5b0cbedacf45e111f02d925fa5b1cec9041fb279<br>*** A reboot is needed to activate the new firmware</p><p>Reboot the Raspberry Pi for the new firmware to take effect.</p><p>root@raspberrypi:~# sudo reboot</p><p>Let’s check again to see what the Raspberry Pi has to say about the new firmware.</p><p>root@raspberrypi:~# sudo rpi-update</p><p>*** Raspberry Pi firmware updater by Hexxeh, enhanced by AndrewS and Dom<br>*** Performing self-update<br>% Total % Received % Xferd Average Speed Time Time Time Current<br>Dload Upload Total Spent Left Speed<br>100 9823 100 9823 0 0 54727 0 –:–:– –:–:– –:–:– 79861<br>*** Relaunching after update<br>*** Raspberry Pi firmware updater by Hexxeh, enhanced by AndrewS and Dom<br>*** Your firmware is already up to date</p><p>Your Raspberry Pi is now running the latest available firmware.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Updating the Raspberry Pi firmware is easy thanks to a nice utility called rpi-update included by default in Raspbian but I’ve also inclu
      
    
    </summary>
    
    
      <category term="unknown" scheme="http://linhost.info/categories/unknown/"/>
    
    
  </entry>
  
  <entry>
    <title>Expand the Root Partition in Kali Linux for the Raspberry Pi</title>
    <link href="http://linhost.info/2015/05/04/expand-the-root-partition-in-kali-linux-for-the-raspberry-pi/"/>
    <id>http://linhost.info/2015/05/04/expand-the-root-partition-in-kali-linux-for-the-raspberry-pi/</id>
    <published>2015-05-04T07:14:06.000Z</published>
    <updated>2020-08-09T09:07:53.999Z</updated>
    
    <content type="html"><![CDATA[<p>By default when Kali Linux for the Rapsberry Pi is installed the file system will only expand to occupy 3GB of storage, in my case I have a 16GB Micro SD card in my Raspberry Pi 2 with most of its capacity unused. One can easily expand the file system by making use of a script that automatically does the job for you. File system after install.</p><p>root@kali:~# df -h</p><p>Filesystem      Size  Used Avail Use% Mounted on<br>rootfs          2.9G  1.5G  1.2G  56% /<br>/dev/root       2.9G  1.5G  1.2G  56% /<br>devtmpfs        460M     0  460M   0% /dev<br>tmpfs            93M  468K   93M   1% /run<br>tmpfs           5.0M     0  5.0M   0% /run/lock<br>tmpfs           186M     0  186M   0% /run/shm</p><p>I should note I did not create the script and found it at the following address <a href="http://www.raspberryvi.org/wiki/doku.php/raspi-expand-rootfs">http://www.raspberryvi.org/wiki/doku.php/raspi-expand-rootfs</a> but it has proven useful. Download the script into the boot directory. Locally hosted.</p><p>root@kali:~# wget -O /boot/raspi-expand-rootfs.sh <a href="http://dl.linhost.info/file1/raspi-expand-rootfs.sh">http://dl.linhost.info/file1/raspi-expand-rootfs.sh</a></p><p>Now we make the script executable.</p><p>root@kali:~# chmod +x /boot/raspi-expand-rootfs.sh</p><p>And execute the script. Don’t be scared by the output.</p><p>root@kali:~# sh /boot/raspi-expand-rootfs.sh</p><p>Command (m for help):<br>Disk /dev/mmcblk0: 15.9 GB, 15931539456 bytes<br>4 heads, 16 sectors/track, 486192 cylinders, total 31116288 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk identifier: 0x000697c0</p><pre><code>    Device Boot      Start         End      Blocks   Id  System</code></pre><p>/dev/mmcblk0p1               1      125000       62500    c  W95 FAT32 (LBA)<br>/dev/mmcblk0p2          125001     6143999     3009499+  83  Linux</p><p>Command (m for help): Partition number (1-4):<br>Command (m for help): Partition type:<br>   p   primary (1 primary, 0 extended, 3 free)<br>   e   extended<br>Select (default p): Partition number (1-4, default 2): First sector (125001-31116287, default 125001): Last sector, +sectors or +size{K,M,G} (125001-31116287, default 31116287): Using default value 31116287</p><p>Command (m for help):<br>Disk /dev/mmcblk0: 15.9 GB, 15931539456 bytes<br>4 heads, 16 sectors/track, 486192 cylinders, total 31116288 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk identifier: 0x000697c0</p><pre><code>    Device Boot      Start         End      Blocks   Id  System</code></pre><p>/dev/mmcblk0p1               1      125000       62500    c  W95 FAT32 (LBA)<br>/dev/mmcblk0p2          125001    31116287    15495643+  83  Linux</p><p>Command (m for help): The partition table has been altered!</p><p>Calling ioctl() to re-read partition table.</p><p>WARNING: Re-reading the partition table failed with error 16: Device or resource busy.<br>The kernel still uses the old table. The new table will be used at<br>the next reboot or after you run partprobe(8) or kpartx(8)<br>Syncing disks.<br>update-rc.d: using dependency based boot sequencing<br>update-rc.d: warning: default start runlevel arguments (2 3 4 5) do not match resize2fs_once Default-Start values (2 3 4 5 S)<br>update-rc.d: warning: default stop runlevel arguments (0 1 6) do not match resize2fs_once Default-Stop values (none)<br>Root partition has been resized. The filesystem will be enlarged upon the next reboot</p><p>It is necessary to reboot the OS for the changes to take effect.</p><p>root@kali:~# reboot</p><p>Once again us the <strong>df</strong> command to verify the file system successfully expanded.</p><p>root@kali:~# df -h</p><p>Filesystem      Size  Used Avail Use% Mounted on<br>rootfs           15G  1.5G   13G  11% /<br>/dev/root        15G  1.5G   13G  11% /<br>devtmpfs        460M     0  460M   0% /dev<br>tmpfs            93M  468K   93M   1% /run<br>tmpfs           5.0M  4.0K  5.0M   1% /run/lock<br>tmpfs           186M     0  186M   0% /run/shm</p><p>If you like you can remove the script from the <strong>/boot</strong> directory.</p><p>root@kali:~# rm /boot/raspi-expand-rootfs.sh</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;By default when Kali Linux for the Rapsberry Pi is installed the file system will only expand to occupy 3GB of storage, in my case I have
      
    
    </summary>
    
    
      <category term="Article" scheme="http://linhost.info/categories/Article/"/>
    
    
  </entry>
  
  <entry>
    <title>Auto Mount USB Drives in Raspbian</title>
    <link href="http://linhost.info/2015/04/28/auto-mount-usb-drives-in-raspbian/"/>
    <id>http://linhost.info/2015/04/28/auto-mount-usb-drives-in-raspbian/</id>
    <published>2015-04-28T07:10:06.000Z</published>
    <updated>2020-08-09T09:07:53.995Z</updated>
    
    <content type="html"><![CDATA[<p>Update and upgrade the Raspbian installation.</p><p>sudo apt-get update &amp;&amp; sudo apt-get upgrade</p><p>Install the package necessary to automatically mount USB drives.</p><p>sudo apt-get install usbmount</p><p>Now plug a USB drive and issue the <strong>df</strong> command to view all volumes. My USB drive was recognized <strong>/dev/sdb</strong> and mounted as <strong>/media/usb0</strong> by the system.</p><p>df -hT</p><p>pi@raspberrypi ~ $ df -hT<br>Filesystem     Type      Size  Used Avail Use% Mounted on<br>rootfs         rootfs    2.9G  2.6G  215M  93% /<br>/dev/root      ext4      2.9G  2.6G  215M  93% /<br>devtmpfs       devtmpfs  460M     0  460M   0% /dev<br>tmpfs          tmpfs      93M  256K   93M   1% /run<br>tmpfs          tmpfs     5.0M     0  5.0M   0% /run/lock<br>tmpfs          tmpfs     186M     0  186M   0% /run/shm<br>/dev/mmcblk0p1 vfat       56M   15M   42M  26% /boot<br>/dev/sdb1      vfat      2.0G  200M  1.8G  11% /media/usb0</p><p>To un-mount a volume make use of the <strong>df</strong> command above to discover the USB drive mount point and issue the <strong>unmount</strong> command as follows.</p><p>sudo umount /media/usb0</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Update and upgrade the Raspbian installation.&lt;/p&gt;
&lt;p&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade&lt;/p&gt;
&lt;p&gt;Install the package neces
      
    
    </summary>
    
    
      <category term="Article" scheme="http://linhost.info/categories/Article/"/>
    
    
  </entry>
  
  <entry>
    <title>Upgrade Ubuntu 14.10 to 15.04</title>
    <link href="http://linhost.info/2015/04/27/upgrade-ubuntu-14-10-to-15-04-2/"/>
    <id>http://linhost.info/2015/04/27/upgrade-ubuntu-14-10-to-15-04-2/</id>
    <published>2015-04-27T19:06:02.000Z</published>
    <updated>2020-08-09T09:07:53.996Z</updated>
    
    <content type="html"><![CDATA[<p>You can view your version of Ubuntu with the following command.</p><p>lsb_release -a</p><p>user@ubuntu:~$ lsb_release -a<br>No LSB modules are available.<br>Distributor ID: Ubuntu<br>Description:    Ubuntu 14.10<br>Release:        14.10<br>Codename:       utopic</p><p>Update and upgrade the system.</p><p>sudo apt-get update</p><p>sudo apt-get upgrade</p><p>If not already installed, then install the <strong>update-manager-core</strong> package from the repository.</p><p>sudo apt-get install update-manager-core</p><p>Start the upgrade tool.</p><p>sudo do-release-upgrade</p><p>Now follow the prompts to complete the upgrade to Ubuntu 15.04. Read the instructions carefully. Verify the upgrade was successful with the help of the <strong>lsb_release</strong> command.</p><p>lsb_release -a</p><p>user@ubuntu:~$ lsb_release -a<br>No LSB modules are available.<br>Distributor ID: Ubuntu<br>Description:    Ubuntu 15.04<br>Release:        15.04<br>Codename:       vivid</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;You can view your version of Ubuntu with the following command.&lt;/p&gt;
&lt;p&gt;lsb_release -a&lt;/p&gt;
&lt;p&gt;user@ubuntu:~$ lsb_release -a&lt;br&gt;No LSB modu
      
    
    </summary>
    
    
      <category term="Article" scheme="http://linhost.info/categories/Article/"/>
    
    
  </entry>
  
</feed>
